* [[file:../../module/secrets.nix][aquaris.secrets]]
The set of all secrets discovered for this machine.
They are managed by [[https://github.com/42LoCo42/sillysecrets][sillysecrets.]]

** Options
- =enable= (bool): Enable the secrets management module.
  Default: true

- =key= (path): Path to the key for decrypting secrets.
  Default: =/var/lib/machine.key= / =/persist/var/lib/machine.key=

- =directory= (path):
  Secrets output directory
  (internal directory will be =<this>.d/<sha56 of sesi.yaml>=).
  Default: =/run/secrets=

- =rules= (set of submodule): Custom access rules for secrets.
  Options:
  - =user= (string): User that owns the decrypted file.
    Default: =root=, but see [[#user-secrets][User secrets]] for exceptions

  - =group= (string): Group that owns the decrypted file.
    Default: =root=

  - =mode= (string): Access mode of the decrypted file.
    Default: =0400=

** Aliases
Aliases are created for all secrets by replacing any =:= with =/=
and creating the resulting directories and symlinks.

** User secrets
While secrets are normally owned by =root=,
secrets of the form =user:<userName>.<secretName>=
are considered "user secrets"
and thus owned by their respective =userName=.

*** password
The secret =user:<userName>.password=
must contain that user's password hash.

This decouples user authentication from the Nix store
and is preferred over setting =hashedPassword= directly.

NOTE: the =password= secret is owned by =root=,
despite being a user secret.
This reflects the typical behaviour of =/etc/shadow=
being readable only be =root=.

*** u2f-keys
The secret =user:<userName>.u2f-keys=
is read by =pam_u2f= (if enabled) as the =authfile= setting,
obviating the need to symlink it to =~/.config/Yubico/u2f_keys=

** Example
Decrypted secrets of the [[file:../../example/][example]] configuration:
#+begin_src text
  /run/secrets
  ├── machine
  │   └── key -> /run/secrets/machine:example/key
  ├── machine:example
  │   └── key
  ├── user
  │   └── alice
  │       └── password -> /run/secrets/user:alice/password
  └── user:alice
      └── password
#+end_src

** Usage
To convert a secret's name to its corresponding output path, call
=config.aquaris.secret= (if you like correct grammar) or
=config.aquaris.secrets= (if you're migrating from an older version)
with the name.

#+begin_src nix
  { config, ... }: {
    services.vaultwarden = {
      enable = true;
      environmentFile = config.aquaris.secret "machine/vaultwarden";
    };
  }
#+end_src
