* [[file:../../module/secrets/default.nix][aquaris.secrets]]
The set of all secrets discovered for this machine.
They are managed by [[https://github.com/42LoCo42/sillysecrets][sillysecrets.]]

** Options
- =outPath= (path): Path of the decrypted file.
  Default: =/run/secrets/<groupName>/<secretName>=

- =user= (string): User that owns the decrypted file.
  Default: =root=

- =group= (string): Group that owns the decrypted file.
  Default: =root=

- =mode= (string): Access mode of the decrypted file.
  Default: =0400=

** Example
Decrypted secrets of the [[file:../../example/][example]] configuration:
#+begin_src text
  /run/secrets
  ├── machine:example
  │   └── key
  └── users:alice
      └── password
#+end_src

The following aliases are created:
- =machine/<secretName>= -> =machine:<machineName>.<secretName>=
- =user/<userName>/<secretName>= -> =user:<userName>.<secretName>=

You can use a secret like this:
#+begin_src nix
  { config, ... }: {
    services.vaultwarden = {
      enable = true;
      environmentFile = config.aquaris.secrets."machine/vaultwarden".outPath;
    };
  }
#+end_src

** Special secrets
All user secrets named =password= are used
for the corresponding user's =hashedPasswordFile= entry.
This decouples user authentication from the Nix store
and should be preferred over setting =hashedPassword= directly.

TODO: support =user/<userName>/ssh-<type>= as SSH keys:
- set their =user= to =<userName>=
- link them into =/home/<userName>/.ssh/id_<type>=
